#include <MFRC522.h>
#include <MFRC522Extended.h>
#include <deprecated.h>
#include <require_cpp11.h>

#include <Wire.h>

#include <SPI.h>
#include <MFRC522.h>
#include <Servo.h>
#include <LiquidCrystal_I2C.h>
#include <Wire.h>

#define SS_PIN 10
#define RST_PIN 9

#define LED_R 4
#define LED_G 5


#define BUZZER 2
#define SCL 19
#define SDA 18
MFRC522 mfrc522(SS_PIN,RST_PIN);
Servo myservo;
LiquidCrystal_I2C lcd(0x27,16,2);


void setup()
{
  Serial.begin(9600);                     // Initialize serial communication
  SPI.begin();                            // Initialize SPI communication

  pinMode(6, OUTPUT);                     // Set pin 6 as an output for an unknown device

  lcd.init();                             // Initialize the LCD display
  lcd.backlight();                        // Turn on the LCD backlight

  mfrc522.PCD_Init();                      // Initialize the RFID module
  myservo.attach(3);                       // Attach the servo motor to pin 3

  myservo.write(0);                        // Move the servo motor to its initial position

  pinMode(LED_G, OUTPUT);                  // Set LED_G pin as an output
  pinMode(LED_R, OUTPUT);                  // Set LED_R pin as an output

  pinMode(BUZZER, OUTPUT);                  // Set BUZZER pin as an output
  noTone(BUZZER);                           // Turn off the buzzer

  Serial.println("Put your card to the reader...");
  Serial.println();
}

void loop()
{
  lcd.setCursor(0, 0);
  lcd.print("Buna Ziua");                   // Display "Buna Ziua" on the first line of the LCD display

  lcd.setCursor(0, 1);
  lcd.print("Scanati cartela");             // Display "Scanati cartela" on the second line of the LCD display

  if (!mfrc522.PICC_IsNewCardPresent())
  {
    return;                                // If a new card is not present, exit the loop
  }

  if (!mfrc522.PICC_ReadCardSerial())
  {
    return;                                // If reading the card's serial number fails, exit the loop
  }

  Serial.print("UID tag:");
  String content = "";
  byte letter;

  for (byte i = 0; i < mfrc522.uid.size; i++)
  {
    Serial.print(mfrc522.uid.uidByte[i] < 0x10 ? "0" : " ");
    Serial.print(mfrc522.uid.uidByte[i], HEX);

    content.concat(String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : " "));
    content.concat(String(mfrc522.uid.uidByte[i], HEX));
  }

  Serial.println();
  Serial.println("Message : ");
  content.toUpperCase();

  if (content.substring(1) == "5C D9 27 4A")
  {
    Serial.println("Access granted");
    Serial.println();
    delay(500);

    digitalWrite(LED_G, HIGH);            // Turn on the green LED
    lcd.clear();                          // Clear the LCD display
    lcd.setCursor(0, 0);
    lcd.print(" ***Verified***");         // Display "***Verified***" on the first line of the LCD display
    lcd.setCursor(0, 1);
    lcd.print("Spor la lucru");           // Display "Spor la lucru" on the second line of the LCD display

    tone(BUZZER, 500);                     // Generate a tone with a frequency of 500Hz
    delay(300);
    noTone(BUZZER);                         // Turn off the buzzer

    myservo.write(180);                     // Move the servo motor to 180 degrees
    delay(500);
    myservo.write(0);                        // Move the servo motor to 0 degrees

    digitalWrite(LED_G, LOW);                // Turn off the green LED
    lcd.clear();                              // Clear the LCD display
  }
  else
  {
    Serial.println("Access denied");
    digitalWrite(LED_R, HIGH);                // Turn on the red LED
    lcd.clear();                               // Clear the LCD display
    lcd.setCursor(0, 0);
    lcd.print(" Invalid key");                 // Display "Invalid key" on the first line of the LCD display

    tone(BUZZER, 300);                          // Generate a tone with a frequency of 300Hz
    delay(1000);
    digitalWrite(LED_R, LOW);                     // Turn off the red LED

    lcd.clear();                                   // Clear the LCD display
    noTone(BUZZER);                                 // Turn off the buzzer
  }
